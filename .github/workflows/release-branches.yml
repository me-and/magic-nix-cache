name: Release Branch

on:
  push:
    branches:
      # NOTE: make sure any branches here are also valid directory names,
      # otherwise creating the directory and uploading to s3 will fail
      - "main"

jobs:
  build:
    uses: ./.github/workflows/build.yaml
    secrets: inherit

  release:
    needs: build

    concurrency: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create the artifacts directory
        run: rm -rf ./artifacts && mkdir ./artifacts

      - uses: actions/download-artifact@v4.1.8
        with:
          name: magic-nix-cache-ARM64-macOS
          path: cache-binary-ARM64-macOS
      - name: Persist the cache binary
        run: cp ./cache-binary-ARM64-macOS/magic-nix-cache.closure.xz ./artifacts/magic-nix-cache-ARM64-macOS

      - uses: actions/download-artifact@v4.1.8
        with:
          name: magic-nix-cache-X64-macOS
          path: cache-binary-X64-macOS
      - name: Persist the cache binary
        run: cp ./cache-binary-X64-macOS/magic-nix-cache.closure.xz ./artifacts/magic-nix-cache-X64-macOS

      - uses: actions/download-artifact@v4.1.8
        with:
          name: magic-nix-cache-X64-Linux
          path: cache-binary-X64-Linux
      - name: Persist the cache binary
        run: cp ./cache-binary-X64-Linux/magic-nix-cache.closure.xz ./artifacts/magic-nix-cache-X64-Linux

      - uses: actions/download-artifact@v4.1.8
        with:
          name: magic-nix-cache-ARM64-Linux
          path: cache-binary-ARM64-Linux
      - name: Persist the cache binary
        run: cp ./cache-binary-ARM64-Linux/magic-nix-cache.closure.xz ./artifacts/magic-nix-cache-ARM64-Linux
